FOREIGN KEY

CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName NVARCHAR(50) NOT NULL
);


CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    FirstName NVARCHAR(50) NOT NULL,
    LastName NVARCHAR(50) NOT NULL,
    Email NVARCHAR(50) NOT NULL,
    DepartmentID INT NOT NULL,
    Salary DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);


INSERT INTO Departments (DepartmentID, DepartmentName) VALUES
(1, 'Human Resources'),
(2, 'Information Technology'),
(3, 'Finance'),
(4, 'Marketing');


INSERT INTO Employees (EmployeeID, FirstName, LastName, Email, DepartmentID, Salary) VALUES
(1, 'John', 'Doe', 'john.doe@example.com', 1, 50000.00),
(2, 'Jane', 'Smith', 'jane.smith@example.com', 2, 60000.00),
(3, 'Sam', 'Brown', 'sam.brown@example.com', 3, 55000.00),
(4, 'Sara', 'Johnson', 'sara.johnson@example.com', 4, 45000.00),
(5, 'David', 'Wilson', 'david.wilson@example.com', 2, 70000.00);



------------------
SELECT e.FirstName, e.LastName, d.DepartmentName, e.Salary 
FROM Employees e
JOIN Departments d ON e.DepartmentId = d.DepartmentId
WHERE d.DepartmentName = 'Information Technology'

SELECT e.FirstName, e.LastName, d.DepartmentName, e.Salary 
FROM Employees e
LEFT JOIN Departments d ON e.DepartmentId = d.DepartmentId

--------
SELECT e.FirstName, e.LastName, e.Email, d.DepartmentName, e.Salary 
FROM Employees e
LEFT JOIN Departments d ON e.DepartmentId = d.DepartmentId and d.DepartmentName = 'Information Technology';





Students Table.

    • `Student ID` (integer, primary key, not null)

    • `StudentName' (nvarchar(50), not null)

    • `Email (nvarchar(50), not null)

    • `Age` (integer, not null)

Courses Table:

    • `CourseID` (integer, primary key, not null)

    • `CourseName` (nvarchar(50), not null)

    • `Credits` (integer, not null)

    • `StudentID` (integer, foreign key referencing `Students(StudentID)`, not null)


CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
    StudentName NVARCHAR(50) NOT NULL,
    Email NVARCHAR(50) NOT NULL,
    Age INT NOT NULL
);


CREATE TABLE Courses (
    CourseID INT PRIMARY KEY,
    CourseName NVARCHAR(50) NOT NULL,
    Credits INT NOT NULL,
    StudentID INT NOT NULL,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID)
);


INSERT INTO Students (StudentID, StudentName, Email, Age) VALUES
(1, 'Alice Johnson', 'alice.johnson@example.com', 20),
(2, 'Bob Smith', 'bob.smith@example.com', 22),
(3, 'Carol White', 'carol.white@example.com', 21),
(4, 'David Brown', 'david.brown@example.com', 23);


INSERT INTO Courses (CourseID, CourseName, Credits, StudentID) VALUES
(1, 'Mathematics', 3, 1),
(2, 'Physics', 4, 2),
(3, 'Chemistry', 3, 3),
(4, 'Biology', 4, 4),
(5, 'Computer Science', 3, 2);

SELECT std.StudentID, std.StudentName, c.CourseName, c.Credits
FROM Students std
INNER JOIN Courses c ON std.StudentID = c.StudentID;


SELECT std.StudentID, std.StudentName, c.CourseName, c.Credits
FROM Students std
LEFT JOIN Courses c ON std.StudentID = c.StudentID;